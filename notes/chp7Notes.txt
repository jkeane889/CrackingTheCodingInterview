// Chapter 7

// Singleton Class Pattern

A class has only one instance and ensures access to instance through application.

class Restaurant () {
    _instance = new Restaurant();
    if (_instance === null) {
        _instance = new Restaurant();
    };

    return instance
};

    - downsides: intefere with unit testing

// Factory Class Pattern

class CardGame() {
    let game = null;
    
    CardGame.createCardGame(gameType);
    if (gameType === 'poker') {
        return new PokerGame();
    } else if (gameType === 'blackjack') {
        return new BlackJackGame();
    }

    return null
};
